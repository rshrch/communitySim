name: communitySimulation

on:
  workflow_dispatch:
    inputs:
      runs_per_job:
        description: "wallets each job will fund"
        default: "1000"
        required: true
      batch_size:
        description: "concurrent requests inside a job"
        default: "50"
        required: true

jobs:
  wallet_funding:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        job_id: [1, 2, 3, 4, 5]
    runs-on: ${{ matrix.os }}

    steps:
    # ─────────────  Checkout & Node  ─────────────
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    # ─────────────  Ubuntu: install + start Tor  ─────────────
    - name: Start Tor (Ubuntu)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y tor netcat-openbsd
        sudo systemctl stop tor || true                    # avoid clash

        TOR_DATA="$HOME/tor_data"
        mkdir -p "$TOR_DATA"

        tor --RunAsDaemon 1 \
            --DataDirectory "$TOR_DATA" \
            --SocksPort 3000 \
            --MaxCircuitDirtiness 0

        # wait until port 3000 is open
        for i in {1..60}; do
          nc -z 127.0.0.1 3000 && exit 0
          sleep 1
        done
        echo "Tor never opened port 3000" >&2
        exit 1

    # ─────────────  macOS: install + start Tor  ─────────────
    - name: Start Tor (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install tor netcat
        TOR_DATA="$HOME/tor_data"
        mkdir -p "$TOR_DATA"

        tor --RunAsDaemon 1 \
            --DataDirectory "$TOR_DATA" \
            --SocksPort 3000 \
            --MaxCircuitDirtiness 0

        for i in {1..60}; do
          nc -z 127.0.0.1 3000 && exit 0
          sleep 1
        done
        echo "Tor never opened port 3000" >&2
        exit 1

    # ─────────────  Windows: install + start Tor  ────────────
    - name: Start Tor (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        choco install tor --no-progress -y                 # shim 'tor' on PATH
        $data = "$env:USERPROFILE\tor_data"
        New-Item -ItemType Directory -Path $data -Force | Out-Null

        # Launch Tor in the background (no RunAsDaemon on Windows)
        Start-Process -FilePath tor -ArgumentList @(
          "--SocksPort","3000",
          "--DataDirectory",$data,
          "--MaxCircuitDirtiness","0"
        ) -WindowStyle Hidden

        # Wait until port is listening
        $tries = 0
        while ($tries -lt 60) {
          if ((Test-NetConnection -ComputerName 127.0.0.1 -Port 3000).TcpTestSucceeded) { exit 0 }
          Start-Sleep -Seconds 1
          $tries++
        }
        Write-Error "Tor never opened port 3000"
        exit 1

    # ─────────────  Node dependencies  ─────────────
    - name: Install Node deps
      run: |
        npm install --no-save @stellar/stellar-sdk socks-proxy-agent axios

    # ─────────────  Run your simulation  ─────────────
    - run: node friendbot_load.mjs
      env:
        TOTAL_RUNS:        ${{ github.event.inputs.runs_per_job }}
        BATCH_SIZE:        ${{ github.event.inputs.batch_size }}
        PAUSE_MS:          "10000"
        PER_REQ_DELAY_MS:  "20"
        MAX_RETRIES:       "3"
