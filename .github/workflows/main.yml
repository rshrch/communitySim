name: communitySimulation

on:
  workflow_dispatch:
    inputs:
      runs_per_job:
        description: "wallets each job will fund"
        default: "1000"
        required: true
      batch_size:
        description: "concurrent requests inside a job"
        default: "50"
        required: true

jobs:
  wallet_funding:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        job_id: [1, 2, 3, 4, 5]        # five jobs per OS image
    runs-on: ${{ matrix.os }}

    steps:
    # ───────────── Checkout & Node ─────────────
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: "20"

    # ───────────── Install + start Tor (Ubuntu) ─────────────
    - name: Install & start Tor (Ubuntu)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y tor netcat-openbsd
        sudo systemctl stop tor || true                       # avoid duplicate instance
        TOR_DATA="$HOME/tor_data"
        mkdir -p "$TOR_DATA"
        tor --RunAsDaemon 1 \
            --DataDirectory "$TOR_DATA" \
            --SocksPort 3000 \
            --MaxCircuitDirtiness 0

    # ───────────── Install + start Tor (macOS) ─────────────
    - name: Install & start Tor (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install tor netcat
        TOR_DATA="$HOME/tor_data"
        mkdir -p "$TOR_DATA"
        tor --RunAsDaemon 1 \
            --DataDirectory "$TOR_DATA" \
            --SocksPort 3000 \
            --MaxCircuitDirtiness 0

    # ───────────── Install + start Tor (Windows) ────────────
    - name: Install & start Tor (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        choco install tor --no-progress -y                     # shim on PATH
        $data = "$env:USERPROFILE\tor_data"
        New-Item -ItemType Directory -Path $data -Force | Out-Null
        tor --RunAsDaemon 1 `
            --DataDirectory $data `
            --SocksPort 3000 `
            --MaxCircuitDirtiness 0
        Start-Sleep -Seconds 5                                 # allow bootstrap

    # ───────────── Health-check SOCKS 3000 ─────────────
    - name: Wait for Tor SOCKS port 3000
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          pwsh -Command '
            for ($i = 0; $i -lt 30; $i++) {
              if ((Test-NetConnection -ComputerName 127.0.0.1 -Port 3000).TcpTestSucceeded) { exit 0 }
              Start-Sleep -Seconds 1
            }
            Write-Error "Tor SOCKS port 3000 never opened"; exit 1
          '
        else
          for i in {1..30}; do
            nc -z 127.0.0.1 3000 && exit 0
            sleep 1
          done
          echo "Tor SOCKS port 3000 never opened" >&2
          exit 1
        fi

    # ───────────── Node dependencies ─────────────
    - name: Install Node deps
      run: |
        npm install --no-save @stellar/stellar-sdk socks-proxy-agent axios

    # ───────────── Run the simulation ─────────────
    - run: node friendbot_load.mjs
      env:
        TOTAL_RUNS:        ${{ github.event.inputs.runs_per_job }}
        BATCH_SIZE:        ${{ github.event.inputs.batch_size }}
        PAUSE_MS:          "10000"
        PER_REQ_DELAY_MS:  "20"
        MAX_RETRIES:       "3"
